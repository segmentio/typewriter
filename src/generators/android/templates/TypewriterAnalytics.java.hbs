/**
 * {{autogeneratedFileWarning}}
 */
package com.segment.generated;

import java.util.*;
import com.segment.analytics.Analytics;
import com.segment.analytics.Options;
import com.segment.analytics.Properties;
import android.content.Context;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;


public class TypewriterAnalytics {
    private Analytics analytics;

    /**
     * Return a reference to the global default {@link TypewriterAnalytics} instance.
     *
     * This will use your the global default {@link Analytics} instance.
     *
     * If you want to use a different {@link Analytics} instance instance, see the
     * {@link TypewriterAnalytics} constructor below.
     */
    public static TypewriterAnalytics with(final Context context) {
        return new TypewriterAnalytics(Analytics.with(context));
    }

    /**
     * Initializes a new TypewriterAnalytics client wrapping the provided Segment Analytics client.
     *
     * You very likely want to use TypewriterAnalytics.with(context) method above instead, which
     * will utilize your existing singleton Segment {@link Analytics} instance.
     *
     * @param analytics {@link Analytics} configured Segment analytics instance
     * @see <a href="https://segment.com/docs/sources/mobile/android/#getting-started">Android Getting Started</a>
     */
    public TypewriterAnalytics(final @NonNull Analytics analytics) {
        this.analytics = analytics;
    }

    {{#each tracks}}
    {{#if propsParam}}
    /**
     {{#if functionDescription}}
     *{{functionDescription}}
     {{/if}}
     * @param props {@link {{class ~}} } to add extra information to this call.
     * @see <a href="https://segment.com/docs/spec/track/">Track Documentation</a>
     */
    public void {{functionName}}(final @Nullable {{propsType}} props) {
        this.analytics.track("{{rawEventName}}", props.toProperties(), TypewriterUtils.addTypewriterContext());
    }

    /**
     {{#if functionDescription}}
     * {{functionDescription}}
     {{/if}}
     * @param props {@link {{class ~}} } to add extra information to this call.
     * @see <a href="https://segment.com/docs/spec/track/">Track Documentation</a>
     */
    public void {{functionName}}(final @Nullable {{propsType}} props, final @Nullable Options options) {
        this.analytics.track("{{rawEventName}}", props.toProperties(), TypewriterUtils.addTypewriterContext(options));
    }
    {{else}}
    /**
     {{#if functionDescription}}
     *{{functionDescription}}
     {{/if}}
     * @see <a href="https://segment.com/docs/spec/track/">Track Documentation</a>
     */
    public void {{functionName}}() {
        this.analytics.track("{{rawEventName}}", new Properties(), TypewriterUtils.addTypewriterContext());
    }

    /**
     {{#if functionDescription}}
     * {{functionDescription}}
     {{/if}}
     * @see <a href="https://segment.com/docs/spec/track/">Track Documentation</a>
     */
    public void {{functionName}}(final @Nullable Options options)  {
        this.analytics.track("{{rawEventName}}", new Properties(), TypewriterUtils.addTypewriterContext(options));
    }
    {{/if}}
    {{/each}}
}
