/**
 * {{autogeneratedFileWarning}}
 */
{{#if isBrowser}}
/**
 * The analytics.js snippet should be available via window.analytics.
 * You can install it by following instructions at: https://segment.com/docs/sources/website/analytics.js/quickstart/
 * Make sure to also include the TypeScript declarations with: `npm install --dev @types/segment-analytics`
 */
declare global {
	interface Window {
		analytics: SegmentAnalytics.AnalyticsJS
	}
}

/** The callback exposed by analytics.js. */
export type Callback = () => void
{{else}}
import AnalyticsNode from 'analytics-node'
export { AnalyticsNode }

 /**
 * At least one of userId or anonymousId must be included in any identify call.
 */
type Identity =
  { userId: string | number; anonymousId?: string | number; } |
  { anonymousId: string | number; userId?: string | number;  };

/**
 * TrackMessage represents a message payload for an analytics `.track()` call.
 * See: https://segment.com/docs/spec/track/
 */
export type TrackMessage<PropertiesType> = Options & Record<string, any> & Identity & {
  /** A dictionary of properties for the event. */
  properties?: PropertiesType
  /**
  * A Javascript date object representing when the track took place.
  * If the track just happened, leave it out and we’ll use the server’s
  * time. If you’re importing data from the past make sure you to send
  * a timestamp.
  */
  timestamp?: Date
}

/** The callback exposed by analytics-node. */
export type Callback = (err: Error) => void
{{/if}}

/** A dictionary of options. For example, enable or disable specific destinations for the call. */
export interface Options {
  /**
  * Selectivly filter destinations. By default all destinations are enabled.
  * https://segment.com/docs/sources/website/analytics.js/#selecting-destinations
  */
  integrations?: {
    [key: string]: boolean | { [key: string]: any }
  }
  /**
  * A dictionary of extra context to attach to the call.
  * https://segment.com/docs/spec/common/#context
  */
  context?: Context
}

/**
  * Context is a dictionary of extra information that provides useful context about a datapoint.
  * @see {@link https://segment.com/docs/spec/common/#context}
  */
export interface Context extends Record<string, any> {
  active?: boolean
  app?: {
    name?: string
    version?: string
    build?: string
  }
  campaign?: {
    name?: string
    source?: string
    medium?: string
    term?: string
    content?: string
  }
  device?: {
    id?: string
    manufacturer?: string
    model?: string
    name?: string
    type?: string
    version?: string
  }
  ip?: string
  locale?: string
  location?: {
    city?: string
    country?: string
    latitude?: string
    longitude?: string
    region?: string
    speed?: string
  }
  network?: {
    bluetooth?: string
    carrier?: string
    cellular?: string
    wifi?: string
  }
  os?: {
    name?: string
    version?: string
  }
  page?: {
    hash?: string
    path?: string
    referrer?: string
    search?: string
    title?: string
    url?: string
  }
  referrer?: {
    type?: string
    name?: string
    url?: string
    link?: string
  }
  screen?: {
    density?: string
    height?: string
    width?: string
  }
  timezone?: string
  groupId?: string
  traits?: Record<string, any>
  userAgent?: string
}
