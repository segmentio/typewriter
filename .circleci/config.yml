version: 2
jobs:
  setup:
    working_directory: ~/typewriter
    docker:
      - image: circleci/node:10.15

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Bootstrap Typewriter
          command: yarn typewriter build
      - persist_to_workspace:
          root: .
          paths: [.]

  build:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: yarn build

  lint:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: yarn lint

  test-unit-tests:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: yarn test

  build-example:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: make build-example

  test-node-javascript-dev:
    docker:
      - image: circleci/node:10.15
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-node-javascript-dev
  test-node-javascript-prod:
    docker:
      - image: circleci/node:10.15
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-node-javascript-prod
  test-node-typescript-dev:
    docker:
      - image: circleci/node:10.15
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-node-typescript-dev
  test-node-typescript-prod:
    docker:
      - image: circleci/node:10.15
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-node-typescript-prod

  test-web-javascript-dev:
    docker:
      - image: cypress/browsers:chrome69
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-web-javascript-dev
  test-web-javascript-prod:
    docker:
      - image: cypress/browsers:chrome69
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-web-javascript-prod
  test-web-typescript-dev:
    docker:
      - image: cypress/browsers:chrome69
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-web-typescript-dev
  test-web-typescript-prod:
    docker:
      - image: cypress/browsers:chrome69
      - image: segment/mock:v0.0.2
    steps:
      - attach_workspace: { at: . }
      - run: make test-web-typescript-prod

  test-ios-objc-dev:
    macos:
      xcode: "11.0.0"
    steps:
      - attach_workspace: { at: . }
      - run: xcrun simctl list
      - run:
          name: Install build dependencies
          command: |
            sudo gem install cocoapods -v 1.8.4
            sudo gem install xcpretty
            sudo gem install cocoapods-check -v 1.1.0
            pod --version
      - restore_cache:
          key: objc-deps-v10-{{ checksum "tests/e2e/ios-objc/Podfile.lock" }}
      - run:
          name: Install Cocoapods
          command: |
            cd tests/e2e/ios-objc
            pod check --verbose || pod install --deployment
      - save_cache:
          paths:
            - tests/e2e/ios-objc/Pods
          key: objc-deps-v10-{{ checksum "tests/e2e/ios-objc/Podfile.lock" }}
      - run:
          name: Run iOS Objective-C Tests
          command: |
            git clone https://github.com/segmentio/mock.git && cd mock && yarn && cd ..
            cd mock && yarn dev &
            sleep 5
            make test-ios-objc-dev
  test-ios-objc-prod:
    macos:
      xcode: "11.0.0"
    steps:
      - attach_workspace: { at: . }
      - run: xcrun simctl list
      - run:
          name: Install build dependencies
          command: |
            sudo gem install cocoapods -v 1.8.4
            sudo gem install xcpretty
            sudo gem install cocoapods-check -v 1.1.0
            pod --version
      - restore_cache:
          key: objc-deps-v10-{{ checksum "tests/e2e/ios-objc/Podfile.lock" }}
      - run:
          name: Install Cocoapods
          command: |
            cd tests/e2e/ios-objc
            pod check --verbose || pod install --deployment
      - save_cache:
          paths:
            - tests/e2e/ios-objc/Pods
          key: objc-deps-v10-{{ checksum "tests/e2e/ios-objc/Podfile.lock" }}
      - run:
          name: Run iOS Objective-C Tests
          command: |
            git clone https://github.com/segmentio/mock.git && cd mock && yarn && cd ..
            cd mock && yarn dev &
            sleep 5
            make test-ios-objc-prod
  test-ios-swift-dev:
    macos:
      xcode: "11.0.0"
    steps:
      - attach_workspace: { at: . }
      - run: xcrun simctl list
      - run:
          name: Install build dependencies
          command: |
            sudo gem install cocoapods -v 1.8.4
            sudo gem install xcpretty
            sudo gem install cocoapods-check -v 1.1.0
            pod --version
      - restore_cache:
          key: swift-deps-v10-{{ checksum "tests/e2e/ios-swift/Podfile.lock" }}
      - run:
          name: Install Cocoapods
          command: |
            cd tests/e2e/ios-swift
            pod check --verbose || pod install --deployment
      - save_cache:
          paths:
            - tests/e2e/ios-swift/Pods
          key: swift-deps-v10-{{ checksum "tests/e2e/ios-swift/Podfile.lock" }}
      - run:
          name: Run iOS Swift Tests
          command: |
            git clone https://github.com/segmentio/mock.git && cd mock && yarn && cd ..
            cd mock && yarn dev &
            sleep 5
            make test-ios-swift-dev
  test-ios-swift-prod:
    macos:
      xcode: "11.0.0"
    steps:
      - attach_workspace: { at: . }
      - run: xcrun simctl list
      - run:
          name: Install build dependencies
          command: |
            sudo gem install cocoapods -v 1.8.4
            sudo gem install xcpretty
            sudo gem install cocoapods-check -v 1.1.0
            pod --version
      - restore_cache:
          key: swift-deps-v10-{{ checksum "tests/e2e/ios-swift/Podfile.lock" }}
      - run:
          name: Install Cocoapods
          command: |
            cd tests/e2e/ios-swift
            pod check --verbose || pod install --deployment
      - save_cache:
          paths:
            - tests/e2e/ios-swift/Pods
          key: swift-deps-v10-{{ checksum "tests/e2e/ios-swift/Podfile.lock" }}
      - run:
          name: Run iOS Swift Tests
          command: |
            git clone https://github.com/segmentio/mock.git && cd mock && yarn && cd ..
            cd mock && yarn dev &
            sleep 5
            make test-ios-swift-prod
  test-android-java-dev:
    docker: # run the steps with Docker
      - image: circleci/android:api-29-node
    environment:
      JVM_OPTS: -Xmx3200m
    steps: # a collection of executable commands
      - attach_workspace: { at: . }
      - restore_cache:
          key: jars-{{ checksum "tests/e2e/android-java/build.gradle" }}-{{ checksum  "tests/e2e/android-java/app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: cd tests/e2e/android-java && ./gradlew androidDependencies && cd ../../..
      - run:
          name: Run Android Java Tests
          command: |
            git clone https://github.com/segmentio/mock.git && cd mock && yarn && cd ..
            cd mock && yarn dev & 
            sleep 5
            make test-android-java-dev
      - save_cache:
          paths:
            - ~/typewriter/tests/e2e/android-java/.gradle
          key: jars-{{ checksum "tests/e2e/android-java/build.gradle" }}-{{ checksum  "tests/e2e/android-java/app/build.gradle" }}
  test-android-java-prod:
    docker: # run the steps with Docker
      - image: circleci/android:api-29-node
    environment:
      JVM_OPTS: -Xmx3200m
    steps: # a collection of executable commands
      - attach_workspace: { at: . }
      - restore_cache:
          key: jars-{{ checksum "tests/e2e/android-java/build.gradle" }}-{{ checksum  "tests/e2e/android-java/app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: cd tests/e2e/android-java && ./gradlew androidDependencies && cd ../../..
      - run:
          name: Run Android Java Tests
          command: |
            git clone https://github.com/segmentio/mock.git && cd mock && yarn && cd ..
            cd mock && yarn dev & 
            sleep 5
            make test-android-java-prod
      - save_cache:
          paths:
            - ~/typewriter/tests/e2e/android-java/.gradle
          key: jars-{{ checksum "tests/e2e/android-java/build.gradle" }}-{{ checksum  "tests/e2e/android-java/app/build.gradle" }}

workflows:
  version: 2
  default:
    jobs:
      - setup
      - build:
          requires: [setup]
      - lint:
          requires: [setup]
      - build-example:
          requires: [setup]
      - test-unit-tests:
          requires: [setup]
      - test-node-javascript-dev:
          requires: [setup]
      - test-node-javascript-prod:
          requires: [setup]
      - test-node-typescript-dev:
          requires: [setup]
      - test-node-typescript-prod:
          requires: [setup]
      - test-web-javascript-dev:
          requires: [setup]
      - test-web-javascript-prod:
          requires: [setup]
      - test-web-typescript-dev:
          requires: [setup]
      - test-web-typescript-prod:
          requires: [setup]
      - test-ios-objc-dev:
          requires: [setup]
      - test-ios-objc-prod:
          requires: [setup]
      - test-ios-swift-dev:
          requires: [setup]
      - test-ios-swift-prod:
          requires: [setup]
      - test-android-java-dev:
          requires: [setup]
      - test-android-java-prod:
          requires: [setup]
