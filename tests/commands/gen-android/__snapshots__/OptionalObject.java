// This code is auto-generated by Segment Typewriter. Do not edit.
package com.segment.analytics;

import java.util.*;
import com.segment.analytics.Properties;
import androidx.annotation.NonNull;

public final class OptionalObject {
    private Properties properties;

    private OptionalObject(Properties properties) {
        this.properties = properties;
    }

    protected Properties toProperties() {
        return properties;
    }

    /**
     * Builder for {@link OptionalObject}
     */
    public static class Builder {
        private Properties properties;

        /**
         * Builder for {@link OptionalObject}
         */
        public Builder() {
            properties = new Properties();
        }

        /**
         * Optional sub-property
         * This property is optional and not required to generate a valid OptionalObject object
         */
        public Builder optionalSubProperty(final @NonNull String optionalSubProperty) {
            properties.putValue("optional sub-property", optionalSubProperty);
            return this;
        }

        /**
         * Required sub-property
         * This property is required to generate a valid OptionalObject object
         */
        public Builder requiredSubProperty(final @NonNull String requiredSubProperty) {
            properties.putValue("required sub-property", requiredSubProperty);
            return this;
        }

        /**
         * Build an instance of {@link OptionalObject}
         * Performs runtime validation on the following required properties:
         *  - requiredSubProperty
         */
        public OptionalObject build() {
            if (properties.get("required sub-property") == null) {
                throw new IllegalArgumentException("OptionalObject missing required property: requiredSubProperty");
            }

            return new OptionalObject(properties);
        }
    }
}
